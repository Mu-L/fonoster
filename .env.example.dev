# General config
DOCKER_HOST_ADDRESS=/* Host address where the docker containers are running */
APP_URL=http://localhost:8080
LOGS_DRIVER_HOST=localhost
LOGS_LEVEL=verbose
LOGS_TRANSPORT=none
LOGS_FORMAT=json

# Initial location owner credentials
#   The server will create a new owner if the email does not exist
#   The password will be updated if the email exists
OWNER_NAME=Admin User
OWNER_EMAIL=admin@fonoster.local
OWNER_PASSWORD=changeme

# Identity Config
IDENTITY_PRIVATE_KEY_PATH=.keys/private.pem
IDENTITY_PUBLIC_KEY_PATH=.keys/public.pem
IDENTITY_DATABASE_URL=postgresql://postgres:postgres@localhost:5432/fnidentity
IDENTITY_WORKSPACE_INVITATION_URL=http://localhost:8449/api/identity/accept-invite
IDENTITY_WORKSPACE_INVITATION_FAIL_URL=http://localhost:8080/invite-fail

# Uncomment to enable OAuth2 with Github
# IDENTITY_OAUTH2_GITHUB_ENABLED=true
# IDENTITY_OAUTH2_GITHUB_CLIENT_ID=your-github-client-id
# IDENTITY_OAUTH2_GITHUB_CLIENT_SECRET=your-github-client-secret

# Uncomment to enable user verification
# IDENTITY_USER_VERIFICATION_REQUIRED=true

# SMTP config
SMTP_HOST=localhost
SMTP_PORT=1025
SMTP_SECURE=false
SMTP_AUTH_USER=postmaster@fonoster.local
SMTP_AUTH_PASS=secret
SMTP_SENDER="Fonoster Info <info@fonoster.local>"

# Twilio Config (Required if user verification is enabled)
# TWILIO_ACCOUNT_SID=your-twilio-account-sid
# TWILIO_AUTH_TOKEN=your-twilio-auth-token
# TWILIO_PHONE_NUMBER=your-twilio-phone-number

# Database and encryption config
#   Create a new encryption key with cloack (https://cloack.47ng.com)
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/fonoster
CLOAK_ENCRYPTION_KEY=k1.aesgcm256.MmPSvzCG9fk654bAbl30tsqq4h9d3N4F11hlue8bGAY=

# InfluxDB config
INFLUXDB_URL=http://localhost:8086
INFLUXDB_INIT_USERNAME=influxdb
INFLUXDB_INIT_PASSWORD=changeme
INFLUXDB_INIT_ORG=fonoster
INFLUXDB_INIT_TOKEN=ghjNQ59FW4oi3bAiMTtfMyVnqtbwq0Iib58D63Lgk3pcrEFFPT0d9tnRKzHk98HNqZJUPc_mpXVkk07_JhBhJg==

# NATS config
NATS_URL=nats://localhost:4222

# Routr config
ROUTR_RTPENGINE_HOST=rtpengine
ROUTR_DATABASE_URL=postgresql://postgres:postgres@postgres:5432/routr
ROUTR_API_ENDPOINT=localhost:51907

# Asterisk config
ASTERISK_ARI_PROXY_URL=http://localhost:8088
ASTERISK_ARI_USERNAME=ari
ASTERISK_ARI_SECRET=changeme
ASTERISK_SIPPROXY_HOST=/* Host address where the docker containers are running */
ASTERISK_SIPPROXY_PORT=5060
ASTERISK_SIPPROXY_USERNAME=voice
ASTERISK_SIPPROXY_SECRET=changeme
ASTERISK_RTP_PORT_START=20000
ASTERISK_RTP_PORT_END=20100
ASTERISK_DTMF_MODE=auto_info
ASTERISK_CODECS=g722,ulaw,alaw

# Uncomment to enable authorization service
#  You will need to to run your own authorization service
# Authz config
# AUTHZ_SERVICE_ENABLED=true
# AUTHZ_SERVICE_HOST=authz
# AUTHZ_SERVICE_PORT=50071
# AUTHZ_SERVICE_METHODS=/fonoster.calls.v1beta2.Calls/CreateCall,/fonoster.identity.v1beta2.Identity/CreateWorkspace

# Needed to support OpenAI embeddings
OPENAI_API_KEY=your-openai-api-key

# Only needed for development
INTEGRATIONS_FILE=./config/integrations.json

# Uncomment to enable custom email and sms templates
#   If not set, the default templates will be used
# TEMPLATES_DIR=/path/to/email/templates